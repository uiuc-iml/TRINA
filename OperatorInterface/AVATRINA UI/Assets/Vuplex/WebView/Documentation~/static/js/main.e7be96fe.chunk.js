(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{284:function(e,t,n){},286:function(e,t,n){},288:function(e,t,n){},290:function(e,t,n){},468:function(e,t,n){},470:function(e,t,n){},472:function(e,t,n){},475:function(e,t,n){},479:function(e,t,n){},483:function(e,t,n){"use strict";n.r(t);var a=n(0),i=n.n(a),r=n(80),o=n(487),s=n(12),l=n(81),c=n.n(l),d=n(19),u=n.n(d),h=n(54),m=n.n(h),p=n(53),b=n.n(p),w=n(2),y=n(3),f=n(5),v=n(4),g=n(6),E=n(486),k=n(485),x=n(488),V=n(484),W={APP_STORE_URL:"https://itunes.apple.com/us/app/vr-browser/id1265684645?ls=1&mt=8",ASSET_STORE_URL:"https://developer.vuplex.com",EMAIL_ADDRESS:"nate@vuplex.com",FACEBOOK_URL:"https://www.facebook.com/vuplexbrowser/",GITHUB_URL:"https://github.com/vuplex",GOOGLE_PLAY_URL:"https://play.google.com/store/apps/details?id=design.sonic.vrdesktop&hl=en",OCULUS_URL:"https://www.oculus.com/experiences/go/1716339908435593/",TWITTER_URL:"https://twitter.com/vuplexbrowser"},S=n(82),I=n.n(S),T=(n(284),function(e){function t(){return Object(w.a)(this,t),Object(f.a)(this,Object(v.a)(t).apply(this,arguments))}return Object(g.a)(t,e),Object(y.a)(t,[{key:"render",value:function(){var e=this.props.site;return i.a.createElement("nav",{className:"navbar ".concat(this.props.className||"")},i.a.createElement("div",{style:"main"===e?{justifyContent:"center"}:void 0},this._renderSide(),i.a.createElement("div",{className:"nav-center"},this._renderMainSiteLink(),"developers"!==e&&i.a.createElement("a",{href:"https://developer.vuplex.com"},"developers"),"blog"!==e&&i.a.createElement("a",{href:"https://blog.vuplex.com"},"blog"),this._renderContactLink(),i.a.createElement("div",{className:"social-links"},i.a.createElement(s.a,{className:"social-link",to:W.TWITTER_URL,eventLabel:"Twitter",target:"_blank"},i.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"512",height:"512",viewBox:"0 0 49.652 49.652"},i.a.createElement("path",{d:"M24.826 0C11.137 0 0 11.137 0 24.826c0 13.688 11.137 24.826 24.826 24.826 13.688 0 24.826-11.138 24.826-24.826C49.652 11.137 38.516 0 24.826 0zm11.075 19.144c.011.246.017.494.017.742 0 7.551-5.746 16.255-16.259 16.255-3.227 0-6.231-.943-8.759-2.565.447.053.902.08 1.363.08 2.678 0 5.141-.914 7.097-2.446a5.72 5.72 0 0 1-5.338-3.969 5.76 5.76 0 0 0 2.58-.096 5.715 5.715 0 0 1-4.583-5.603l.001-.072a5.69 5.69 0 0 0 2.587.714 5.71 5.71 0 0 1-2.541-4.755c0-1.048.281-2.03.773-2.874a16.225 16.225 0 0 0 11.777 5.972 5.707 5.707 0 0 1-.147-1.303 5.714 5.714 0 0 1 9.884-3.91 11.406 11.406 0 0 0 3.63-1.387 5.74 5.74 0 0 1-2.516 3.162 11.36 11.36 0 0 0 3.282-.899 11.494 11.494 0 0 1-2.848 2.954z",fill:"white"}))),i.a.createElement(s.a,{className:"social-link",to:W.FACEBOOK_URL,eventLabel:"Facebook",target:"_blank"},i.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 167.657 167.657",width:"512",height:"512"},i.a.createElement("path",{d:"M83.829.349C37.532.349 0 37.881 0 84.178c0 41.523 30.222 75.911 69.848 82.57v-65.081H49.626v-23.42h20.222V60.978c0-20.037 12.238-30.956 30.115-30.956 8.562 0 15.92.638 18.056.919v20.944l-12.399.006c-9.72 0-11.594 4.618-11.594 11.397v14.947h23.193l-3.025 23.42H94.026v65.653c41.476-5.048 73.631-40.312 73.631-83.154 0-46.273-37.532-83.805-83.828-83.805z",fill:"white"}))),i.a.createElement(s.a,{className:"social-link",to:W.GITHUB_URL,eventLabel:"GitHub",target:"_blank"},i.a.createElement("svg",{viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},i.a.createElement("path",{d:"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12",fill:"white"}))))),this._renderSide("nav-right")))}},{key:"_renderContactLink",value:function(){return"main"===this.props.site?i.a.createElement(V.a,{to:"/contact"},"contact"):i.a.createElement("a",{href:"https://vuplex.com/contact"},"contact")}},{key:"_renderMainSiteLink",value:function(){return"main"===this.props.site?i.a.createElement(V.a,{to:"/"},"home"):i.a.createElement("a",{href:"https://vuplex.com"},"apps")}},{key:"_renderSide",value:function(e){if("main"!==this.props.site)return i.a.createElement("div",{className:"nav-side ".concat(e||"")},this.props.children,i.a.createElement("a",{className:"nav-logo",href:"https://vuplex.com"},i.a.createElement("img",{src:I.a,alt:"Vuplex logo"})),i.a.createElement("div",{className:"nav-slash"}),i.a.createElement("a",{className:"nav-header",href:"/"},this.props.site))}}]),t}(a.Component)),C=(n(286),function(e){function t(){var e,n;Object(w.a)(this,t);for(var a=arguments.length,r=new Array(a),o=0;o<a;o++)r[o]=arguments[o];return(n=Object(f.a)(this,(e=Object(v.a)(t)).call.apply(e,[this].concat(r))))._renderFileReference=function(e){return i.a.createElement("li",{key:e.name},i.a.createElement(V.a,{to:"/webview/".concat(e.name),onClick:n.props.onLinkClick},e.name))},n}return Object(g.a)(t,e),Object(y.a)(t,[{key:"render",value:function(){var e=this.props.fileReferenceDefinitions.filter(function(e){return e.includeInSidebar});return i.a.createElement("aside",{className:"sidebar ".concat(this.props.className||"")},i.a.createElement(V.a,{to:"/webview/overview",onClick:this.props.onLinkClick},"Overview"),i.a.createElement(V.a,{to:"/webview/getting-started",onClick:this.props.onLinkClick},"Getting started"),i.a.createElement("a",{href:"https://blog.vuplex.com/debugging-webviews",onClick:this.props.onLinkClick},"Debugging web content"),i.a.createElement("div",null,i.a.createElement("a",null,"Class Reference"),i.a.createElement("ul",null,e.map(this._renderFileReference))))}}]),t}(a.Component)),O=[{name:"AndroidWebView",type:"class",description:"The Android `IWebView` implementation, which also includes extra methods for Android-specific functionality.",inheritsFrom:["MonoBehaviour","IWebView"],includeInSidebar:!0,members:[{name:"ClearHistory",returns:"void",type:"method",description:"Clears the webview's back / forward navigation history."},{name:"IsWebViewAvailable",static:!0,returns:"bool",type:"method",description:"\nIndicates whether the Android WebView package is installed on the system and available.\n\n3D WebView internally depends on Android's WebView package, which is normally installed as part of the operating system. In rare circumstances, the Android WebView package may be unavailable. For example, this can happen if the user used developer tools to delete the WebView package or if [updates to the WebView package are currently being installed](https://bugs.chromium.org/p/chromium/issues/detail?id=506369)."},{name:"LoadHtml",returns:"void",type:"method",arguments:[{type:"string",name:"html"},{type:"string",name:"baseUrl"}],description:"Like `LoadHtml(string html)`, but also allows a virtual base URL to be specified."},{name:"MovePointer",returns:"void",type:"method",arguments:[{type:"Vector2",name:"point"}],description:"\nMoves the pointer to the given point in the webpage. This can be used, for example, to trigger hover effects in the webpage.\n\nThe x and y components of the `point` param are values between 0 and 1 that are normalized to the width and height, respectively. For example, `point.x = x in Unity units / width in Unity units`. Like in the browser, the origin is in the upper-left corner, the positive direction of the y-axis is down, and the positive direction of the x-axis is right.\n"},{name:"Pause",returns:"void",type:"method",description:"Pauses processing, media, and rendering for this webview instance until `Resume()` is called."},{name:"PauseAll",static:!0,returns:"void",type:"method",description:"Pauses processing, media, and rendering for all webview instances. This method is automatically called by the plugin when the application is paused."},{name:"Resume",returns:"void",type:"method",description:"Resumes processing and rendering for all webview instances after a previous call to `Pause().`"},{name:"ResumeAll",static:!0,returns:"void",type:"method",description:"Resumes processing and rendering for all webview instances after a previous call to `PauseAll().` This method is automatically called by the plugin when the application resumes after being paused."},{name:"SetAudioAndVideoCaptureEnabled",static:!0,returns:"void",type:"method",arguments:[{type:"bool",name:"enabled"}],description:"By default, web pages cannot access the device's camera or microphone via JavaScript, even if the user has granted the app permission to use them. Invoking `SetAudioAndVideoCaptureEnabled(true)` allows **all web pages** to access the camera and microphone if the user has granted the app permission to use them via the standard Android permission dialogs. This is useful, for example, to enable WebRTC support."},{name:"SetInitialScale",returns:"void",type:"method",arguments:[{type:"float",name:"scale"}],description:"Sets the initial scale for web content, where 1.0 is the default scale."},{name:"SetMediaPlaybackRequiresUserGesture",returns:"void",type:"method",arguments:[{type:"bool",name:"mediaPlaybackRequiresUserGesture"}],description:"By default, AndroidWebView prevents JavaScript from auto-playing sound from most sites unless the user has first interacted with the page. You can call this method to disable or re-enable enforcement of this auto-play policy."},{name:"SetNativeKeyboardEnabled",static:!0,returns:"void",type:"method",arguments:[{type:"bool",name:"enabled"}],description:"Enables or disables the native Android on-screen keyboard for new webviews (the default is disabled)."},{name:"SetUserAgent",returns:"void",type:"method",arguments:[{type:"bool",name:"mobile"}],description:"\nLike `Web.SetUserAgent(bool mobile)`, except it sets the user-agent for a single webview instance instead of setting it globally.\n\nIf you globally set a default user-agent using `Web.SetUserAgent()`, you can still use this method to override the user-agent for a single webview instance."},{name:"SetUserAgent",returns:"void",type:"method",arguments:[{type:"string",name:"userAgent"}],description:"\nLike `Web.SetUserAgent(string userAgent)`, except it sets the user-agent for a single webview instance instead of setting it globally.\n\nIf you globally set a default user-agent using `Web.SetUserAgent()`, you can still use this method to override the user-agent for a single webview instance."},{name:"ZoomBy",returns:"void",type:"method",arguments:[{type:"float",name:"zoomFactor"}],description:"Zooms in or out by the given factor, which is multiplied by the current zoom level to reach the new zoom level. `zoomFactor` must be in the range from 0.01 to 100.0. Note that the zoom level gets reset when a new page is loaded."}]},{name:"EventArgs",type:"class",description:"A generic version of System.EventArgs.",inheritsFrom:"System.EventArgs",members:[{name:"Value",returns:"T",type:"property",description:"The wrapped value."}]},{name:"iOSWebView",type:"class",description:"The iOS `IWebView` implementation, which also includes extra methods for iOS-specific functionality.",inheritsFrom:["MonoBehaviour","IWebView"],includeInSidebar:!0,members:[{name:"GetFileUrlForBundleResource",returns:"string",type:"method",static:!0,arguments:[{type:"string",name:"fileName"}],description:'\nReturns a file URL for resource included in the iOS app bundle. This is useful for getting a file URL to a local file so that it can be loaded via `IWebView.LoadUrl()`.\n\nExample:\n```\nvar fileUrl = iOSWebView.GetFileUrlForBundleResource("my-static-files/my-webpage.html");\n```\n'},{name:"AllowCustomUriSchemes",returns:"void",type:"method",static:!0,arguments:[{type:"bool",name:"allowCustomSchemes"}],description:"By default, iOSWebView blocks requests for custom schemes (ex: myapp://myaction?data=foo) in order to prevent sites like Wikipedia and YouTube from using URIs with custom schemes to launch their native apps via a webpage. However, if you want to override this behavior (for example, to use your own custom URI scheme within your app), you can enable custom URI schemes with this method. When a custom URI scheme is loaded (probably via JavaScript), the webview emits a UrlChanged event with the custom URL."},{name:"SetNativeKeyboardEnabled",returns:"void",type:"method",static:!0,arguments:[{type:"bool",name:"enabled"}],description:"Enables or disables the native iOS on-screen keyboard for new webviews. The default is disabled."}]},{name:"IWebView",type:"interface",description:i.a.createElement("p",null,i.a.createElement("code",null,"IWebView")," is the primary interface for loading and interacting with web content.",i.a.createElement(V.a,{to:"/webview/WebViewPrefab"},i.a.createElement("code",null,"WebViewPrefab"))," takes care of creating one for you and hooking it up to the materials in its prefab. If you want to create an",i.a.createElement("code",null,"IWebView")," outside of the prefab (to connect to your own custom GameObject) you can use ",i.a.createElement(V.a,{to:"/webview/Web#CreateWebView"},i.a.createElement("code",null,"Web.CreateWebView()")),"."),includeInSidebar:!0,members:[{name:"LoadProgressChanged",returns:"EventHandler<ProgressChangedEventArgs>",type:"event",description:"Indicates that the page load percentage changed."},{name:"MessageEmitted",returns:"EventHandler<EventArgs<string>>",type:"event",description:"\nIndicates that JavaScript running in the page used the `window.vuplex.postMessage` JavaScript API to emit a message to the Unity application.\n\nJavaScript example for sending a message:\n\n```\nfunction sendMessageToCSharp() {\n  // This object passed to `postMessage()` is automatically serialized as JSON\n  // and is emitted via the C# MessageEmitted event. This API mimics the window.postMessage API.\n  window.vuplex.postMessage({ type: 'greeting', message: 'Hello from JavaScript!' });\n}\n\nif (window.vuplex) {\n  // The window.vuplex object has already been initialized after page load,\n  // so we can go ahead and send the message.\n  sendMessageToCSharp();\n} else {\n  // The window.vuplex object hasn't been initialized yet because the page is still\n  // loading, so add an event listener to send the message once it's initialized.\n  window.addEventListener('vuplexready', sendMessageToCSharp);\n}\n```\n"},{name:"PageLoadFailed",returns:"EventHandler",type:"event",description:"Indicates that the page failed to load. This can happen, for instance, if DNS is unable to resolve the hostname."},{name:"TextureChanged",returns:"EventHandler<EventArgs<Texture2D>>",type:"event",description:"\nIndicates that an update occurred that caused the webview to discard\nits existing texture and start using the new texture emitted in this event.\n\nCurrently, this event is only used for iOS when a resize occurs (it's not used on\nAndroid). WebViewPrefab automatically handles this event by applying thew new texture\nto the ViewportMaterialView. If you're not using the prefab, then you'll have to\nmanually handle this event like it does.\n"},{name:"TitleChanged",returns:"EventHandler<EventArgs<string>>",type:"event",description:"Indicates that the page's title changed."},{name:"UrlChanged",returns:"EventHandler<UrlChangedEventArgs>",type:"event",description:"Indicates that the URL of the webview changed, either due to user interaction or JavaScript."},{name:"VideoRectChanged",returns:"EventHandler<EventArgs<Rect>>",type:"event",description:"Indicates that the rect of the playing video changed. Note that `WebViewPrefab` automatically handles this event for you."},{name:"VideoTextureChanged",returns:"EventHandler<EventArgs<Texture2D>>",type:"event",description:"Indicates that an update occurred that caused the webview to discard its existing video texture and start using the new texture emitted in this event. Note that `WebViewPrefab` automatically handles this event for you."},{name:"Resolution",returns:"int",type:"property",description:"The webview's resolution in pixels per Unity unit."},{name:"Size",returns:"Vector2",type:"property",description:"The webview's current size in Unity units."},{name:"SizeInPixels",returns:"Vector2",type:"property",description:"The webview's current size in pixels."},{name:"Texture",returns:"Texture2D",type:"property",description:"The texture for the webview's web content."},{name:"Url",returns:"string",type:"property",description:"The current URL."},{name:"VideoTexture",returns:"Texture2D",type:"property",description:"The texture for the webview's video content."},{name:"Init",returns:"void",type:"method",arguments:[{type:"Texture2D",name:"viewportTexture"},{type:"float",name:"width"},{type:"float",name:"height"},{type:"Texture2D",name:"videoTexture"}],description:"Initializes a newly created webview with the given viewport and video textures created with `Web.CreateTexture()` and the dimensions in Unity units. Note that `WebViewPrefab` automatically calls this method for you, so you only need to invoke this directly if you manually create a WebView outside of the prefab using `Web.CreateWebView()`."},{name:"Init",returns:"void",type:"method",arguments:[{type:"Texture2D",name:"viewportTexture"},{type:"float",name:"width"},{type:"float",name:"height"}],description:"Like the other `Init()` method, but with video support disabled."},{name:"Blur",returns:"void",type:"method",description:"Makes the webview relinquish focus."},{name:"CanGoBack",returns:"Task<bool>",type:"method",description:"Checks whether the webview can go back with a call to `GoBack()`."},{name:"CanGoForward",returns:"Task<bool>",type:"method",description:"Checks whether the webview can go forward with a call to `GoForward()`."},{name:"CanGoBack",returns:"void",type:"method",arguments:[{type:"Action<bool>",name:"callback"}],description:"Like the other version of `CanGoBack()`, except it uses a callback instead of a `Task` in order to be compatible with versions of .NET before 4.0."},{name:"CanGoForward",returns:"void",type:"method",arguments:[{type:"Action<bool>",name:"callback"}],description:"Like the other version of `CanGoForward()`, except it uses a callback instead of a `Task` in order to be compatible with versions of .NET before 4.0."},{name:"CaptureScreenshot",returns:"Task<bytes[]>",type:"method",description:"Returns a PNG image of the content visible in the webview. Note that screenshots do not include video content, which appears black."},{name:"CaptureScreenshot",returns:"void",type:"method",arguments:[{type:"Action<bytes[]>",name:"callback"}],description:"Like the other version of `CaptureScreenshot()`, except it uses a callback instead of a `Task` in order to be compatible with versions of .NET before 4.0."},{name:"Click",returns:"void",type:"method",arguments:[{type:"Vector2",name:"point"}],description:"Clicks at the given point in the webpage. The x and y components of the point are values  between 0 and 1 that are normalized to the width and height, respectively. For example,  `point.x = x in Unity units / width in Unity units`. Like in the browser, the origin is in the upper-left corner, the positive direction of the y-axis is down, and the positive direction of the x-axis is right."},{name:"DisableViewUpdates",returns:"void",type:"method",description:"Disables the webview from rendering to its texture."},{name:"Dispose",returns:"void",type:"method",description:"Destroys the webview, releasing all of its resources."},{name:"EnableViewUpdates",returns:"void",type:"method",description:"Re-enables rendering after a call to `DisableViewUpdates()`."},{name:"ExecuteJavaScript",returns:"Task<string>",type:"method",arguments:[{type:"string",name:"javaScript"}],description:"\nExecutes the given script in the context of the webpage's main frame and returns the result.\n\nNote: When targeting .NET 4.6 or newer, this method returns a `Task<string>`, and when targeting an older version of .NET, this method returns `void`."},{name:"ExecuteJavaScript",returns:"void",type:"method",arguments:[{type:"string",name:"javaScript"},{type:"Action<string>",name:"callback"}],description:"\nExecutes the given script in the context of the webpage's main frame and calls the given callback with the result.\n\nThis method is functionally equivalent to the version of `ExecuteJavaScript()` that returns a `Task`, except it uses a callback instead of a `Task` in order to be compatible with versions of .NET before 4.0.\n"},{name:"Focus",returns:"void",type:"method",description:"Makes the webview take focus. Currently, this method is only needed on iOS."},{name:"GoBack",returns:"void",type:"method",description:"Navigates back to the previous page in the webview's history."},{name:"GetRawTextureData",returns:"Task<byte[]>",type:"method",description:"\nA replacement for [`Texture2D.GetRawTextureData()`](https://docs.unity3d.com/ScriptReference/Texture2D.GetRawTextureData.html) for IWebView.Texture. Note that the texture data excludes video content, which appears black.\n\nUnity's `Texture2D.GetRawTextureData()` currently does not work for textures created with `Texture2D.CreateExternalTexture()`. So, this method serves as a replacement by providing the equivalent functionality. You can load the bytes returned by this method into another texture using [`Texture2D.LoadRawTextureData()`](https://docs.unity3d.com/ScriptReference/Texture2D.LoadRawTextureData.html).\n"},{name:"GetRawTextureData",returns:"void",type:"method",arguments:[{type:"Action<byte[]>",name:"callback"}],description:"Like the other version of `GetRawTextureData()`, except it uses a callback instead of a `Task` in order to be compatible with versions of .NET before 4.0."},{name:"GoForward",returns:"void",type:"method",description:"Navigates forward to the next page in the webview's history."},{name:"HandleKeyboardInput",returns:"void",type:"method",arguments:[{type:"string",name:"key"}],description:'Dispatches a keystroke to the webview. A key can either be a single character representing a unicode character (e.g. "A", "b", "?") or a [JavaScript Key value](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values) (e.g. "ArrowUp", "Enter").'},{name:"LoadHtml",returns:"void",type:"method",arguments:[{type:"string",name:"html"}],description:"\nLoads the webpage contained in the given HTML string.\n\nExample:\n```\nwebView.LoadHtml(@\"<!DOCTYPE html>\n  <html>\n    <head>\n      <title>Test Page</title>\n      <style>\n        h1 {\n          font-family: Helvetica, Arial, Sans-Serif;\n        }\n      </style>\n    </head>\n    <body>\n      <h1>LoadHtml Example</h1>\n      <script>\n        console.log('This page was loaded!');\n      <\/script>\n    </body>\n  </html>\"\n);\n```\n"},{name:"LoadUrl",returns:"void",type:"method",arguments:[{type:"string",name:"url"}],description:"\nNavigates to the given URL. Note that this can also be a file URL that points to a local file in the Android or iOS application bundle. For example, you can assemble a file URL on Android if you know the path to the resource:\n\n`file:///android_asset/my-static-files/my-webpage.html`\n\nOn iOS, you must ask the system for a file URL to a given bundle resource. iOSWebView has a static `GetFileUrlForBundleResource()` method that can do this for you.\n      "},{name:"LoadUrl",returns:"void",type:"method",arguments:[{type:"string",name:"url"},{type:"Dictionary<string, string>",name:"additionalHttpHeaders"}],description:"Like `LoadUrl(string url)`, but also sends the given HTTP request headers when loading the URL."},{name:"Reload",returns:"void",type:"method",description:"Reloads the current page."},{name:"Resize",returns:"void",type:"method",arguments:[{type:"float",name:"width"},{type:"float",name:"height"}],description:"Resizes the webview to the dimensions given in Unity units. Note that if you're using `WebViewPrefab`, you should call `WebViePrefab.Resize()` instead."},{name:"PostMessage",returns:"void",type:"method",arguments:[{type:"string",name:"data"}],description:"Posts a message that JavaScript within the webview can listen for using `window.vuplex.addEventListener('message', function(message) {})`. The provided data string is passed as the data property of the message object."},{name:"Scroll",returns:"void",type:"method",arguments:[{type:"Vector2",name:"scrollDelta"}],description:"\nScrolls the webview's top-level body by the given delta.\n\nIf you want to scroll a specific section of the page, see `Scroll(Vector2 scrollDelta, Vector2 mousePosition)` instead.\n\n`scrollDelta` is in Unity units, and because the browser's origin is in the upper-left corner, y-axis' positive direction is down, and the x-axis' positive direction is right.\n"},{name:"Scroll",returns:"void",type:"method",arguments:[{type:"Vector2",name:"scrollDelta"},{type:"Vector2",name:"mousePosition"}],description:"\nScrolls by the given delta at the given mouse position.\n\n`scrollDelta` is in Unity units, and because the browser's origin is in the upper-left corner, the y-axis' positive direction is down, and the x-axis' positive direction is right.\n\nThe x and y components of `mousePosition` are values between 0 and 1 that are normalized to the width and height, respectively. For example, `point.x = x in Unity units / width in Unity units`.\n"},{name:"SetResolution",returns:"void",type:"method",arguments:[{type:"int",name:"pixelsPerUnityUnit"}],description:"\nSets the webview's resolution in pixels per Unity unit.\n\nThe default resolution is 1300 pixels per Unity unit. This method is useful, for example, if you want web content to appear larger or smaller. Setting a lower resolution decreases the pixel density, but has the effect of making web content appear larger. Setting a higher resolution increases the pixel density, but has the effect of making content appear smaller.\n"},{name:"ZoomIn",returns:"void",type:"method",description:"Zooms into the currently loaded web content. Note that the zoom level gets reset when a new page is loaded."},{name:"ZoomOut",returns:"void",type:"method",description:"Zooms back out after a previous call to `ZoomIn()`. Note that the zoom level gets reset when a new page is loaded."}]},{name:"Keyboard",type:"class",description:'\n A 3D, on-screen keyboard that you can programmatically place in your scene.\n\n The keyboard is a web UI that runs inside a `WebViewPrefab` instance and\n emits messages to the C# to indicate when characters have been pressed.\n [The keyboard UI is open source and available on GitHub](https://github.com/vuplex/unity-keyboard).\n\n Example:\n\n ```\n // First, create a WebViewPrefab for our main web content.\n var mainWebContent = WebViewPrefab.Instantiate(0.6f, 0.3f);\n mainWebContent.transform.parent = transform;\n mainWebContent.transform.localPosition = new Vector3(0, 0f, 0.4f);\n mainWebContent.transform.LookAt(transform);\n mainWebContent.Initialized += (sender, e) => mainWebContent.WebView.LoadUrl("https://www.google.com");\n\n // Add the keyboard under the main webview.\n var keyboard = Keyboard.Instantiate();\n keyboard.transform.parent = mainWebContent.transform;\n keyboard.transform.localPosition = new Vector3(0, -0.31f, 0);\n keyboard.transform.localEulerAngles = new Vector3(0, 0, 0);\n // Hook up the keyboard so that characters are routed to the main webview.\n keyboard.InputReceived += (sender, e) => mainWebContent.WebView.HandleKeyboardInput(e.Value);\n ```\n\n The keyboard supports layouts for the following languages and automatically sets the layout\n based on the operating system\'s default language:\n - English\n - Spanish\n - French\n - German\n - Russian\n - Danish\n - Norwegian\n - Swedish\n',inheritsFrom:["MonoBehaviour"],includeInSidebar:!0,members:[{name:"InputReceived",returns:"EventHandler<EventArgs<string>>",type:"event",description:"Indicates that the user clicked a key on the keyboard."},{name:"Initialized",returns:"EventHandler",type:"event",description:"Indicates that the keyboard finished initializing."},{name:"WebViewPrefab",returns:"WebViewPrefab",type:"property",description:"The `WebViewPrefab` instance used for the keyboard UI."},{name:"Instantiate",returns:"Keyboard",type:"method",static:!0,description:"Creates and initializes a `Keyboard` instance using the default width and height."},{name:"Instantiate",returns:"Keyboard",type:"method",static:!0,arguments:[{type:"float",name:"width"},{type:"float",name:"height"}],description:"Creates and initializes a `Keyboard` instance using the specified width and height."},{name:"Init",returns:"void",type:"method",arguments:[{type:"float",name:"width"},{type:"float",name:"height"}],description:"Initializes the keyboard with the specified width and height. `Instantiate()` calls this method for you, so you only need to call this method directly if you place the `Keyboard.cs` script on your own custom object."}]},{name:"ProgressChangedEventArgs",type:"class",description:"Event args to indicate the load progress of a webpage.",inheritsFrom:"System.EventArgs",members:[{name:"Progress",returns:"float",type:"property",description:"The estimated load progress normalized to a float between 0 and 1."},{name:"Type",returns:"ProgressChangeType",type:"property",description:"The load progress event type ( `Started`, `Finished`, `Failed`, or `Updated``)."}]},{name:"UrlChangedEventArgs",type:"class",description:"Event args to indicate that the webpage URL changed.",inheritsFrom:"System.EventArgs",members:[{name:"Url",returns:"string",type:"property",description:"The new webpage URL."},{name:"Title",returns:"string",type:"property",description:"The new webpage title."},{name:"Type",returns:"string",type:"property",description:'Indicates the type of URL change (`"LOAD"`, `"PUSH_STATE"`, `"REPLACE_STATE"`, or `"HASH_CHANGE"`).'}]},{name:"StandaloneWebView",type:"class",description:i.a.createElement("p",null,"The base class for the Windows and macOS ",i.a.createElement(V.a,{to:"/webview/IWebView"},i.a.createElement("code",null,"IWebView"))," implementations, which also includes extra methods for Standalone-specific functionality."),inheritsFrom:["MonoBehaviour","IWebView"],includeInSidebar:!0,members:[{name:"EnableRemoteDebugging",returns:"void",type:"method",static:!0,arguments:[{type:"int",name:"portNumber"}],description:"Enables remote debugging with Chrome DevTools on the given port. For example, if you provide `8080` as the `portNumber`, you can go to localhost:8080 in Chrome to see a list of webviews to inspect."}]},{name:"ViewportMaterialView",type:"class",description:"Script that can be attached to a GameObject with a mesh renderer in order to render the contents of the WebView onto the mesh. Note that `WebViewPrefab` takes care of handling this for you, so you only need to deal with `ViewportMaterialView` directly if you create `IWebView` instances outside of a prefab using `Web.CreateWebView()`.",inheritsFrom:"MonoBehaviour",members:[{name:"Initialized",returns:"EventHandler",type:"event",description:"Indicates when the view's `Texture` property has finished initializing after a call to the asynchronous`Init()` method."},{name:"IsVideo",returns:"bool",type:"property",description:"A property set via the Unity editor to indicate that the material should default to the video maerial instead of the viewport material. The video material has a lower render queue than the viewport material to ensure that videos are rendered behind the viewport."},{name:"Texture",returns:"Texture2D",type:"property",description:"The texture for the view, which is a special texture created by `Web.CreateTexture()`. The texture is created asynchronously when `Init()` is called, this property will be `null` until the `Initialized` event is raised. If the webview raises its `TextureChanged` event, this property can be set to the new texture."},{name:"Init",returns:"void",type:"method",description:"Initializes the view with the default material. Initialization is asynchronous, so the `Texture` property will be `null` until the `Initialized` event is raised."}]},{name:"WebViewOptions",type:"struct",description:"Options that can be passed to the `WebViewPrefab.Instantiate()` to alter the behavior of the WebView created.",members:[{name:"disableVideo",returns:"bool",type:"property",description:"Videos are enabled by default, but you can disable them with this option if you know you will not need to render videos. Setting this option to `true` will prevent the prefab from allocating a second texture for video and prevent it from allocating resources for video playback."}]},{name:"WebViewPrefab",type:"class",description:i.a.createElement("div",null,i.a.createElement("p",null,i.a.createElement("code",null,"WebViewPrefab")," is the easiest way to create and interact with an ",i.a.createElement(V.a,{to:"/webview/IWebView"},i.a.createElement("code",null,"IWebView")),". It takes care of wiring the ",i.a.createElement(V.a,{to:"/webview/IWebView"},i.a.createElement("code",null,"IWebView"))," up to its prefab's textures and input handlers, so all you need to do is load some web content from a URL or HTML string, and then the user can view and interact with the web content."),i.a.createElement("p",null,i.a.createElement("code",null,"WebViewPrefab")," automatically handles pointer click, scroll, and drag events (also used for scrolling) from Unity's input event system."),"Example:",i.a.createElement("pre",null,i.a.createElement("code",null,'// Create a 0.5 x 0.5 instance of of the prefab\nvar webViewPrefab = WebViewPrefab.Instantiate(0.5f, 0.5f);\n// Position the prefab how we want it\nwebViewPrefab.transform.parent = transform;\nwebViewPrefab.transform.localPosition = new Vector3(0, 0f, 0.5f);\nwebViewPrefab.transform.LookAt(transform);\n// Load a URL once the prefab finishes initializing\nwebViewPrefab.Initialized += (sender, e) =>; {\n  webViewPrefab.WebView.LoadUrl("https://vuplex.com");\n};')),i.a.createElement("p",null,"If your use case requires a high degree of customization, you can instead create an ",i.a.createElement(V.a,{to:"/webview/IWebView"},i.a.createElement("code",null,"IWebView"))," outside of the prefab using ",i.a.createElement(V.a,{to:"/webview/Web#CreateWebView"},i.a.createElement("code",null,"Web.CreateWebView()"))," and then hook it up to your own textures.")),inheritsFrom:["MonoBehaviour"],includeInSidebar:!0,members:[{name:"Clicked",returns:"EventHandler",type:"event",description:"Indicates that the prefab was clicked. Note that the prefab automatically  calls the `IWebView.Click()` method for you."},{name:"Initialized",returns:"EventHandler",type:"event",description:"Indicates that the prefab finished initializing, so its `WebView` property is ready to use."},{name:"ClickingEnabled",returns:"bool",type:"property",description:"Clicking is enabled by default, but can be disabled by setting this property to `false`."},{name:"DragToScrollThreshold",returns:"float",type:"property",description:"In order to prevent dragging-to-scroll from triggering unwanted clicks, a click is discarded if the pointer drags beyond this threshold before PointerUp occurs. The default threshold is 0.15."},{name:"ScrollingEnabled",returns:"bool",type:"property",description:"Scrolling is enabled by default, but can be disabled by setting this property to `false`."},{name:"ScrollSensitivity",static:!0,returns:"float",type:"property",description:"Allows the scroll sensitivity to be adjusted. The default sensitivity is 0.001."},{name:"WebView",returns:"IWebView",type:"property",description:"A reference to the prefab's `IWebView` instance, which is available after the `Initialized` event is raised. Before initialization is complete, this property is `null`."},{name:"Destroy",returns:"void",type:"method",description:"Destroys the `WebViewPrefab` and its children. Note that you don't need to call this method if you destroy the `WebViewPrefab`'s parent with [`GameObject.Destroy()`](https://docs.unity3d.com/ScriptReference/Object.Destroy.html)."},{name:"Instantiate",returns:"WebViewPrefab",type:"method",static:!0,arguments:[{type:"float",name:"width"},{type:"float",name:"height"}],description:"Creates a new instance of the `WebViewPrefab` prefab with the given dimensions in Unity units and initializes it asynchronously. The `WebView` property is available after initialization completes, which is indicated by the `Initialized` event."},{name:"Instantiate",returns:"WebViewPrefab",type:"method",static:!0,arguments:[{type:"float",name:"width"},{type:"float",name:"height"},{type:"WebViewOptions",name:"options"}],description:"Like `Instantiate(float width, float height)`, except it also accepts an object of options flags that can be used to tweak the generated webview's behavior."},{name:"Init",returns:"void",type:"method",description:"\nAsynchronously initializes the WebViewPrefab using the width and height set via the Unity editor.\n\nYou only need to call this method directly if you place a WebViewPrefab prefab in your scene using the Unity editor; it's not needed if you instantiate the prefab programmatically using `Instantiate()`. This method asynchronously initializes the `WebView property`, which is available after the Initialized event is fired.\n"},{name:"Init",returns:"void",type:"method",arguments:[{type:"float",name:"width"},{type:"float",name:"height"}],description:"\nAsynchronously initializes the WebViewPrefab to the specified size.\n\nYou only need to call this method directly if you place a WebViewPrefab prefab in your scene using the Unity editor; it's not needed if you instantiate the prefab programmatically using `Instantiate()`. This method asynchronously initializes the `WebView property`, which is available after the Initialized event is fired.\n"},{name:"Init",returns:"void",type:"method",arguments:[{type:"float",name:"width"},{type:"float",name:"height"},{type:"WebViewOptions",name:"options"}],description:"Like `Init(float width, float height)`, except it also accepts an object of options flags that can be used to alter the webview's behavior."},{name:"Resize",returns:"void",type:"method",arguments:[{type:"float",name:"width"},{type:"float",name:"height"}],description:"Resizes the prefab mesh and webview to the given dimensions in Unity units."}]},{name:"Web",type:"class",static:!0,description:"`Web` is the top-level static class for the module. It contains static methods for configuring the module and creating resources.",includeInSidebar:!0,members:[{name:"ClearAllData",returns:"void",type:"method",static:!0,description:"\nClears all data that persists between webview instances, including cookies, storage, and cached resources.\n\nNote that on Windows and macOS, this method can only be called prior to creating any webviews.\n"},{name:"CreateMaterial",returns:"void",type:"method",static:!0,arguments:[{type:"Action<Material>",name:"callback"}],description:"\nCreates a material and texture that the webview can use for rendering.\n\nNote that the `WebViewPrefab` takes care of material creation for you, so you only need to call this method directly if you create `IWebView` instances outside of a prefab using `Web.CreateWebView()`.\n\nMaterial creation occurs asynchronously in order to allow textures to be created on the render thread, and the provided callback is called once the material has been created.\n"},{name:"CreateVideoMaterial",returns:"void",type:"method",static:!0,arguments:[{type:"Action<Material>",name:"callback"}],description:"\nLike `CreateMaterial`, except it creates a material that a webview can use for rendering video. If the platform doesn't need a separate material and texture for video, this method returns `null`.\n\nAndroid and iOS use a separate material and texture for video rendering, whereas standalone Windows and macOS do not.\n"},{name:"CreateTexture",returns:"void",type:"method",static:!0,arguments:[{type:"float",name:"width"},{type:"float",name:"height"},{type:"Action<Texture2D>",name:"callback"}],description:"\nCreates a special texture that the webview can use for rendering.\n\nNote that the `WebViewPrefab` takes care of texture creation for you, so you only need to call this method directly if you create `IWebView` instances outside of a prefab using `Web.CreateWebView()`.\n\nTexture creation occurs asynchronously in order to allow textures to be created on the render thread, and the provided callback is called once the texture has been created.\n"},{name:"CreateWebView",returns:"IWebView",type:"method",static:!0,description:"\nCreates a new webview in a platform-agnostic way.\n\nNote that `WebViewPrefab` takes care of creating an `IWebView` instance for you, so you only need to call this method directly if you need to create `IWebView` instances outside of a prefab.\n"},{name:"SetStorageEnabled",returns:"void",type:"method",static:!0,arguments:[{type:"bool",name:"enabled"}],description:'\nControls whether data like cookies, localStorage, and cached resources is persisted between webview instances. The default is `true`, but this can be set to `false` to achieve an "incognito mode".\n\nNote that on Windows and macOS, this method can only be called prior to creating any webviews.'},{name:"SetUserAgent",returns:"void",type:"method",static:!0,arguments:[{type:"bool",name:"mobile"}],description:"\nBy default, webviews use a User-Agent that looks that of a desktop computer so that servers return the desktop versions of websites. If you instead want the mobile versions of websites, you can invoke this method with `true` to use the User-Agent for a mobile device.\n\nNote that on Windows and macOS can only be called prior to creating any webviews.\n"},{name:"SetUserAgent",returns:"void",type:"method",static:!0,arguments:[{type:"string",name:"userAgent"}],description:"\nConfigures the module to use a custom User-Agent string.\n\nNote that on Windows and macOS can only be called prior to creating any webviews."}]}],A="",U=null,R=null,P={};function L(){A="",null!==U&&U.disconnect(),null!==R&&(window.clearTimeout(R),R=null)}function D(){var e=document.getElementById(A);return null!==e&&(e.scrollIntoView(P),L(),!0)}function N(e){return P={behavior:e.behavior||"auto"},i.a.createElement(V.a,Object.assign({},e,{onClick:function(t){L(),e.onClick&&e.onClick(t),"string"===typeof e.to?A=e.to.split("#").slice(1).join("#"):"object"===typeof e.to&&"string"===typeof e.to.hash&&(A=e.to.hash.replace("#","")),""!==A&&window.setTimeout(function(){!1===D()&&(null===U&&(U=new MutationObserver(D)),U.observe(document,{attributes:!0,childList:!0,subtree:!0}),R=window.setTimeout(function(){L()},1e4))},0)}}),e.children)}var j=n(83),z=n.n(j),M=n(84),_=n.n(M),F=n(85),G=n.n(F),H=n(86),B=n.n(H),J=(n(288),function(e){function t(){return Object(w.a)(this,t),Object(f.a)(this,Object(v.a)(t).apply(this,arguments))}return Object(g.a)(t,e),Object(y.a)(t,[{key:"componentDidMount",value:function(){s.b.pageview("/webview/overview")}},{key:"render",value:function(){return i.a.createElement("div",{className:"webview-overview"},i.a.createElement("h1",null,"Unity 3D WebView for Android, iOS, Windows, and macOS"),i.a.createElement("h2",{className:"asset-store-header"},"Buy on the Asset Store:"),i.a.createElement("div",{className:"store-links"},i.a.createElement("a",{href:"https://assetstore.unity.com/packages/tools/gui/3d-webview-for-android-and-ios-135383"},i.a.createElement("img",{src:z.a,alt:"Purchase Vuplex 3D WebView for Android and iOS on the Unity Asset Store"})),i.a.createElement("a",{href:"https://assetstore.unity.com/packages/tools/gui/3d-webview-for-android-137030"},i.a.createElement("img",{src:_.a,alt:"Purchase Vuplex 3D WebView for Android on the Unity Asset Store"})),i.a.createElement("a",{href:"https://assetstore.unity.com/packages/tools/gui/3d-webview-for-ios-137040"},i.a.createElement("img",{src:G.a,alt:"Purchase Vuplex 3D WebView for iOS on the Unity Asset Store"}))),i.a.createElement("video",{src:B.a,autoPlay:!0,muted:!0,loop:!0,playsInline:!0}),i.a.createElement("p",{className:"description"},"Easily render and interact with web content in 3D on Android, iOS, Windows, and macOS using the same code that powers the ",i.a.createElement("a",{href:"https://vuplex.com"},"Vuplex VR/AR Browser"),"."),i.a.createElement("ul",null,i.a.createElement("li",null,"Load a webpage ",i.a.createElement(N,{to:"/webview/IWebView#LoadUrl"},"from a URL")," or ",i.a.createElement(N,{to:"/webview/IWebView#LoadHtml"},"HTML string")),i.a.createElement("li",null,"Watch HTML5 videos and YouTube"),i.a.createElement("li",null,"Type with the included ",i.a.createElement(V.a,{to:"/webview/Keyboard"},"on-screen keyboard")),i.a.createElement("li",null,"Get started quickly using ",i.a.createElement(V.a,{to:"/webview/WebViewPrefab"},"WebViewPrefab"),", which automatically renders to a Texture2D and handles user interaction"),i.a.createElement("li",null,"C# source code for a ",i.a.createElement(V.a,{to:"/webview/IWebView"},"unified API")," that is the same on ",i.a.createElement("a",{href:"https://assetstore.unity.com/packages/slug/137030"},"Android"),", ",i.a.createElement("a",{href:"https://assetstore.unity.com/packages/slug/137040"},"iOS"),", ",i.a.createElement("a",{href:"https://assetstore.unity.com/packages/slug/154144"},"Windows"),", and ",i.a.createElement("a",{href:"https://assetstore.unity.com/packages/slug/154144"},"macOS")),i.a.createElement("li",null,"Powered by ",i.a.createElement("a",{href:"https://en.wikipedia.org/wiki/Chromium_(web_browser)"},"Chromium")," on Windows and macOS (currently version 76.0)"),i.a.createElement("li",null,"Dispatch ",i.a.createElement(N,{to:"/webview/IWebView#HandleKeyboardInput"},"keyboard")," and ",i.a.createElement(N,{to:"/webview/IWebView#Click"},"mouse")," events, ",i.a.createElement(N,{to:"/webview/WebViewPrefab#Resize"},"resize"),", ",i.a.createElement(N,{to:"/webview/IWebView#ZoomIn"},"zoom"),", ",i.a.createElement(N,{to:"/webview/IWebView#Scroll"},"scroll"),", and go ",i.a.createElement(N,{to:"/webview/IWebView#GoBack"},"back")," / ",i.a.createElement(N,{to:"/webview/IWebView#GoForward"},"forward")," programmatically"),i.a.createElement("li",null,i.a.createElement(N,{to:"/webview/IWebView#ExecuteJavaScript"},"Execute JavaScript")," in the context of the current page"),i.a.createElement("li",null,"Send messages from ",i.a.createElement(N,{to:"/webview/IWebView#PostMessage"}," C# to JavaScript")," and ",i.a.createElement(N,{to:"/webview/IWebView#MessageEmitted"},"vice versa")),i.a.createElement("li",null,"Listen for browser events like ",i.a.createElement(N,{to:"/webview/IWebView#TitleChanged"},"TitleChanged"),", ",i.a.createElement(N,{to:"/webview/IWebView#UrlChanged"},"UrlChanged"),", and ",i.a.createElement(N,{to:"/webview/IWebView#PageLoadFailed"},"PageLoadFailed")),i.a.createElement("li",null,"Supports multithreaded rendering and single pass stereo rendering"),i.a.createElement("li",null,"Supports PDFs")),i.a.createElement("h2",null,"Examples"),i.a.createElement("ul",null,i.a.createElement("li",null,"Comes with a 3D demo scene for getting started"),i.a.createElement("li",null,i.a.createElement("a",{href:"https://github.com/vuplex/oculus-webview-example",target:"_blank",rel:"noopener"},"Oculus example")," (Oculus Quest, Oculus Go, Gear VR)"),i.a.createElement("li",null,i.a.createElement("a",{href:"https://github.com/vuplex/google-vr-webview-example",target:"_blank",rel:"noopener"},"Google VR example")," (Cardboard, Daydream)"),i.a.createElement("li",null,i.a.createElement("a",{href:"https://github.com/vuplex/ar-foundation-webview-example",target:"_blank",rel:"noopener"},"AR Foundation example"))),i.a.createElement("h2",null,"System requirements"),i.a.createElement("ul",null,i.a.createElement("li",null,"Android 5.0+ (OpenGL graphics API)"),i.a.createElement("li",null,"iOS 10+ (supports both Metal and OpenGL)"),i.a.createElement("li",null,"Windows 8+ (D3D11 graphics API, requires the ",i.a.createElement("a",{href:"https://support.microsoft.com/en-us/help/2977003/the-latest-supported-visual-c-downloads#section-2"},"Visual C++ redistributable"),")"),i.a.createElement("li",null,"macOS 10.10+ (Metal graphics API)"),i.a.createElement("li",null,"Unity 5.6+ (except versions 2017.3 - 2018.1 are unsupported on Windows due a Unity bug)")),i.a.createElement("h2",null,"Important notes"),i.a.createElement("ul",null,i.a.createElement("li",null,"3D WebView's native Android, iOS, Windows, and macOS plugins are provided as precompiled libraries, and the native source code for them is not provided."),i.a.createElement("li",null,"Licensed under the ",i.a.createElement("a",{href:"https://vuplex.com/commercial-library-license"},"Vuplex Commercial Library license"),"."),i.a.createElement("li",null,"On Android and iOS, regular HTML5 video tags and videos on popular sites like YouTube, Vimeo, and Facebook work well, but some 3rd-party JS video widgets do not function as expected. To determine whether a specific site or video widget is compatible, try it first in the ",i.a.createElement("a",{href:"https://vuplex.com"},"Vuplex VR Browser app"),"."),i.a.createElement("li",null,"WebGL is currently not supported on Android."),i.a.createElement("li",null,"Building for the Windows Store or Mac App Store is not supported."),i.a.createElement("li",null,i.a.createElement("a",{href:"https://vuplex.com/contact"},"Contact me")," if you have questions!")))}}]),t}(a.Component)),K=n(87),q=n.n(K),Y=(n(290),function(e){function t(){return Object(w.a)(this,t),Object(f.a)(this,Object(v.a)(t).apply(this,arguments))}return Object(g.a)(t,e),Object(y.a)(t,[{key:"componentDidMount",value:function(){s.b.pageview("/webview/getting-started")}},{key:"render",value:function(){return i.a.createElement("div",{className:"page getting-started"},i.a.createElement("h1",null,"Getting started"),i.a.createElement("ol",null,i.a.createElement("li",null,"Purchase and import 3D WebView for one or more platforms: ",i.a.createElement("a",{href:"https://assetstore.unity.com/packages/tools/gui/3d-webview-for-android-137030"},"Android"),", ",i.a.createElement("a",{href:"https://assetstore.unity.com/packages/tools/gui/3d-webview-for-ios-137040"},"iOS"),", ",i.a.createElement("a",{href:"https://assetstore.unity.com/packages/slug/154144"},"Windows and macOS")),i.a.createElement("li",null,"Add the WebViewDemo scene to your build"),i.a.createElement("li",null,i.a.createElement("strong",null,"Android settings:"),i.a.createElement("ol",{type:"a"},i.a.createElement("li",null,'Set "Minimum API Level" to "Android 5.0 Lollipop"'),i.a.createElement("li",null,'Set "Internet Access" to "Require"'))),i.a.createElement("li",null,i.a.createElement("strong",null,"iOS settings:"),i.a.createElement("ol",{type:"a"},i.a.createElement("li",null,"No changes to the Unity player settings are required"),i.a.createElement("li",null,'Once Unity generates your Xcode project, verify that "Enable Bitcode" is set to "No" in ',i.a.createElement("em",null,"Build Settings"),i.a.createElement("img",{src:q.a,alt:"location of bitcode settings in Xcode"})))),i.a.createElement("li",null,i.a.createElement("strong",null,"Windows settings:"),i.a.createElement("ol",{type:"a"},i.a.createElement("li",null,'Set "Graphics APIs for Windows" to "Direct3D11"'))),i.a.createElement("li",null,i.a.createElement("strong",null,"macOS settings:"),i.a.createElement("ol",{type:"a"},i.a.createElement("li",null,'Set "Graphics APIs for Mac" to "Metal"'),i.a.createElement("li",null,'Verify that "Metal Editor Support" is enabled'))),i.a.createElement("li",null,"Now you can run the WebViewDemo scene in the editor or build and deploy it to your device"),i.a.createElement("li",null,"Check out the docs for ",i.a.createElement(V.a,{to:"/webview/WebViewPrefab"},"WebViewPrefab")," and ",i.a.createElement(V.a,{to:"/webview/IWebView"},"IWebView")," for more details on loading and interacting with web content")),i.a.createElement("h2",null,"Examples"),i.a.createElement("ul",null,i.a.createElement("li",null,"3D WebView's WebViewDemo scene displays Google.com with a keyboard for typing. It uses Unity's standalone input system, so you can tap and swipe on the screen to click and scroll."),i.a.createElement("li",null,i.a.createElement("a",{href:"https://github.com/vuplex/oculus-webview-example"},"Oculus example")," (Oculus Quest, Oculus Go, and Gear VR)"),i.a.createElement("li",null,i.a.createElement("a",{href:"https://github.com/vuplex/google-vr-webview-example"},"Google VR example")," (Cardboard and Daydream)"),i.a.createElement("li",null,i.a.createElement("a",{href:"https://github.com/vuplex/ar-foundation-webview-example"},"AR Foundation example"))))}}]),t}(a.Component)),Z=n(34),Q=n.n(Z),X=n(38),$=n.n(X),ee=n(89);function te(e){var t="".concat(e.returns," ").concat(e.name);if("method"===e.type){var n=e.arguments?e.arguments.map(function(e){return"".concat(e.type," ").concat(e.name)}).join(", "):"";t+="(".concat(n,")")}return e.static&&(t="static "+t),t}n(468);var ne=function(e){function t(){var e,n;Object(w.a)(this,t);for(var a=arguments.length,r=new Array(a),o=0;o<a;o++)r[o]=arguments[o];return(n=Object(f.a)(this,(e=Object(v.a)(t)).call.apply(e,[this].concat(r))))._renderMember=function(e){return i.a.createElement("div",{key:e.name+JSON.stringify(e.arguments)},i.a.createElement("h3",{id:e.name},e.name),n._renderFullName(e),e.description&&i.a.createElement(Q.a,{className:"description",source:e.description}))},n}return Object(g.a)(t,e),Object(y.a)(t,[{key:"render",value:function(){return i.a.createElement("div",{className:"member-section"},i.a.createElement("h2",null,this.props.title),this.props.members.map(this._renderMember))}},{key:"_renderFullName",value:function(e){var t=this,n=te(e).split(" ").filter(function(e){return!!e}).reduce(function(e,n,a){if(a&&e.push(" "),t.props.fileReferenceDefinitions.find(function(e){return e.name===n}))e.push(i.a.createElement(V.a,{key:n,to:"/webview/".concat(n)},n));else{var r=n.split(/[<>]/),o=null,s=!0,l=!1,c=void 0;try{for(var d,u=function(){var e=d.value,n=t.props.fileReferenceDefinitions.find(function(t){return t.name===e});if(n)return o=n,"break"},h=r[Symbol.iterator]();!(s=(d=h.next()).done);s=!0){if("break"===u())break}}catch(w){l=!0,c=w}finally{try{s||null==h.return||h.return()}finally{if(l)throw c}}if(o){var m=o.name,p=n.split(m),b=i.a.createElement(V.a,{key:m,to:"/webview/".concat(m)},m);p.splice(1,0,b),e.push.apply(e,Object(ee.a)(p))}else e.push(n)}return e},[]);return i.a.createElement("code",{className:"full-name"},n)}}]),t}(a.Component),ae=(n(470),function(e){function t(){var e,n;Object(w.a)(this,t);for(var a=arguments.length,r=new Array(a),o=0;o<a;o++)r[o]=arguments[o];return(n=Object(f.a)(this,(e=Object(v.a)(t)).call.apply(e,[this].concat(r))))._renderMember=function(e){return i.a.createElement("div",{key:e.name+JSON.stringify(e.arguments)},i.a.createElement(N,{to:"#".concat(e.name),behavior:"smooth"},te(e)))},n}return Object(g.a)(t,e),Object(y.a)(t,[{key:"render",value:function(){return i.a.createElement("div",{className:"member-table"},i.a.createElement("h3",null,this.props.title),this.props.members.map(this._renderMember))}}]),t}(a.Component)),ie=(n(472),function(e){function t(){var e,n;Object(w.a)(this,t);for(var a=arguments.length,i=new Array(a),r=0;r<a;r++)i[r]=arguments[r];return(n=Object(f.a)(this,(e=Object(v.a)(t)).call.apply(e,[this].concat(i))))._saveRef=function(e){return n._componentElement=e},n}return Object(g.a)(t,e),Object(y.a)(t,[{key:"componentDidMount",value:function(){this._highlightCode(),s.b.pageview("/webview/".concat(this.props.name))}},{key:"componentDidUpdate",value:function(){this._highlightCode()}},{key:"render",value:function(){var e=this.props.members||[],t=$()(e.filter(function(e){return"event"===e.type}),"name"),n=$()(e.filter(function(e){return"method"===e.type}),"name"),a=$()(e.filter(function(e){return"property"===e.type}),"name");return i.a.createElement("div",{className:"file-reference",ref:this._saveRef},i.a.createElement("div",null,i.a.createElement("h1",null,this.props.name),i.a.createElement("h2",null,this.props.static?"static ":"",this.props.type,this._renderBaseClasses())),this._renderDescription(),i.a.createElement("section",{className:"member-summary"},i.a.createElement("h2",null,"Summary"),!!a.length&&i.a.createElement(ae,{title:"Public properties",members:a}),!!n.length&&i.a.createElement(ae,{title:"Public methods",members:n}),!!t.length&&i.a.createElement(ae,{title:"Public events",members:t})),!!a.length&&i.a.createElement(ne,{title:"Public properties",members:a,fileReferenceDefinitions:this.props.fileReferenceDefinitions}),!!n.length&&i.a.createElement(ne,{title:"Public methods",members:n,fileReferenceDefinitions:this.props.fileReferenceDefinitions}),!!t.length&&i.a.createElement(ne,{title:"Public events",members:t,fileReferenceDefinitions:this.props.fileReferenceDefinitions}))}},{key:"_highlightCode",value:function(){for(var e=this._componentElement.querySelectorAll("pre code"),t=0;t<e.length;t++)u.a.highlightBlock(e[t])}},{key:"_renderBaseClasses",value:function(){var e=this,t=this.props.inheritsFrom;if(t&&t.length){var n=("string"===typeof this.props.inheritsFrom?[t]:t).reduce(function(t,n,a){return a&&t.push(", "),e.props.fileReferenceDefinitions.find(function(e){return e.name===n})?t.push(i.a.createElement(V.a,{key:n,to:"/webview/".concat(n)},n)):t.push(n),t},[]);return i.a.createElement("span",null," : ",n)}}},{key:"_renderDescription",value:function(){var e=this.props.description;return"string"===typeof e?i.a.createElement(Q.a,{source:e}):e}}]),t}(a.Component)),re=n(489),oe=function(e){function t(){return Object(w.a)(this,t),Object(f.a)(this,Object(v.a)(t).apply(this,arguments))}return Object(g.a)(t,e),Object(y.a)(t,[{key:"componentDidUpdate",value:function(e){this.props.location!==e.location&&window.scrollTo(0,0)}},{key:"render",value:function(){return null}}]),t}(a.Component),se=Object(re.a)(oe),le=(n(475),function(){return i.a.createElement(E.a,{to:"/webview/overview"})}),ce=function(e){function t(){var e,n;Object(w.a)(this,t);for(var a=arguments.length,r=new Array(a),o=0;o<a;o++)r[o]=arguments[o];return(n=Object(f.a)(this,(e=Object(v.a)(t)).call.apply(e,[this].concat(r)))).state={mobileSidebarOpen:!1},n._handleMenuClick=function(){return n.setState({mobileSidebarOpen:!n.state.mobileSidebarOpen})},n._handleSidebarLinkClick=function(){n.state.mobileSidebarOpen&&n.setState({mobileSidebarOpen:!1})},n._renderFileReferenceRoute=function(e){return i.a.createElement(k.a,{key:e.name,exact:!0,path:"/webview/".concat(e.name),render:function(t){return i.a.createElement(ie,Object.assign({fileReferenceDefinitions:O},t,e))}})},n}return Object(g.a)(t,e),Object(y.a)(t,[{key:"render",value:function(){return i.a.createElement("div",{className:"app"},i.a.createElement(se,null),i.a.createElement(T,{site:"developers",className:"developers-navbar"},i.a.createElement("div",{className:"menu-button",role:"button",tabIndex:0,onClick:this._handleMenuClick},this._renderMenuIcon())),i.a.createElement("div",{className:"app-container"},i.a.createElement("div",{className:"sidebar-container ".concat(this.state.mobileSidebarOpen?"mobile-open-container":"")},i.a.createElement(C,{className:this.state.mobileSidebarOpen?"mobile-open":"desktop-sidebar",fileReferenceDefinitions:O,onLinkClick:this._handleSidebarLinkClick}),this.state.mobileSidebarOpen&&i.a.createElement("div",{className:"mobile-sidebar-backdrop",onClick:this._handleMenuClick})),i.a.createElement("div",{className:"page-container"},i.a.createElement(x.a,null,i.a.createElement(k.a,{exact:!0,path:"/",component:le}),i.a.createElement(k.a,{exact:!0,path:"/webview",component:le}),i.a.createElement(k.a,{exact:!0,path:"/webview/overview",component:J}),i.a.createElement(k.a,{exact:!0,path:"/webview/getting-started",component:Y}),O.map(this._renderFileReferenceRoute)))))}},{key:"_renderMenuIcon",value:function(){return this.state.mobileSidebarOpen?"\xd7":i.a.createElement("div",{className:"hamburger"},i.a.createElement("div",null),i.a.createElement("div",null),i.a.createElement("div",null))}}]),t}(a.Component);Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));n(477),n(479);s.b.initialize("UA-115535860-5");var de=i.a.createElement(o.a,null,i.a.createElement(ce,null));Object(r.render)(de,document.getElementById("root")),c.a.polyfill(),u.a.registerLanguage("javascript",m.a),u.a.registerLanguage("cs",b.a),u.a.initHighlightingOnLoad(),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},82:function(e,t,n){e.exports=n.p+"static/media/vuplex-logo.ed37dca9.png"},83:function(e,t,n){e.exports=n.p+"static/media/asset-store-badge-android-and-ios.2e47344b.png"},84:function(e,t,n){e.exports=n.p+"static/media/asset-store-badge-android.b2170384.png"},85:function(e,t,n){e.exports=n.p+"static/media/asset-store-badge-ios.e14c91e6.png"},86:function(e,t,n){e.exports=n.p+"static/media/webview-demo.a600f5cb.mp4"},87:function(e,t,n){e.exports=n.p+"static/media/bitcode.4f9abd57.jpg"},90:function(e,t,n){e.exports=n(483)}},[[90,2,1]]]);
//# sourceMappingURL=main.e7be96fe.chunk.js.map